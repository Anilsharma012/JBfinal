{"version":3,"file":"node-build.mjs","sources":["../../server/models/Product.js","../../server/controllers/ProductController.js","../../server/routes/products.ts","../../server/index.js","../../server/node-build.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst productSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n  price: { type: Number, required: true },\n  category: { type: String, required: true },\n  description: { type: String },\n  imageUrl: { type: String },\n  inStock: { type: Boolean, default: true },\n  createdAt: { type: Date, default: Date.now },\n  updatedAt: { type: Date, default: Date.now },\n});\n\nexport default mongoose.model(\"Product\", productSchema);\n","import Product from \"../models/Product.js\";\n\n// 🟢 Add New Product\nexport const createProduct = async (req, res) => {\n  try {\n    const product = new Product(req.body);\n    await product.save();\n    // Add id field for frontend compatibility\n    const productWithId = {\n      ...product.toObject(),\n      id: product._id.toString(),\n    };\n    res.status(201).json({ success: true, data: productWithId }); // 👈 Fixed format\n  } catch (err) {\n    res.status(500).json({ success: false, message: err.message });\n  }\n};\n\n// ✅ Add this inside productController.ts or .js\nexport const deleteProduct = async (req, res) => {\n  try {\n    const { id } = req.params;\n    // Assuming you have Product model:\n    await Product.findByIdAndDelete(id);\n    res.json({ message: \"Product deleted successfully\" });\n  } catch (error) {\n    res.status(500).json({ error: \"Failed to delete product\" });\n  }\n};\n\n// 🔎 Get Product by ID\nexport const getProductById = async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    if (!product) {\n      return res\n        .status(404)\n        .json({ success: false, message: \"Product not found\" });\n    }\n    // Add id field for frontend compatibility\n    const productWithId = {\n      ...product.toObject(),\n      id: product._id.toString(),\n    };\n    res.status(200).json({ success: true, data: productWithId });\n  } catch (err) {\n    res.status(500).json({ success: false, message: err.message });\n  }\n};\n\n// 🔵 Get All Products\nexport const getAllProducts = async (req, res) => {\n  try {\n    const products = await Product.find().sort({ createdAt: -1 });\n    // Add id field for frontend compatibility\n    const productsWithId = products.map((product) => ({\n      ...product.toObject(),\n      id: product._id.toString(),\n    }));\n    res.status(200).json({ success: true, data: productsWithId }); // 👈 Fixed format\n  } catch (err) {\n    res.status(500).json({ success: false, message: err.message });\n  }\n};\n\nexport const updateProduct = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const updated = await Product.findByIdAndUpdate(id, req.body, {\n      new: true,\n    });\n    if (!updated) {\n      return res\n        .status(404)\n        .json({ success: false, message: \"Product not found\" });\n    }\n    // Add id field for frontend compatibility\n    const productWithId = {\n      ...updated.toObject(),\n      id: updated._id.toString(),\n    };\n    res.json({ success: true, data: productWithId });\n  } catch (error) {\n    res.status(500).json({ success: false, message: error.message });\n  }\n};\n\nexport const getProductsByCategory = async (req, res) => {\n  try {\n    const category = req.params.category;\n    const products = await Product.find({ category });\n    // Add id field for frontend compatibility\n    const productsWithId = products.map((product) => ({\n      ...product.toObject(),\n      id: product._id.toString(),\n    }));\n    res.json({ success: true, data: productsWithId });\n  } catch (error) {\n    res.status(500).json({ success: false, message: error.message });\n  }\n};\n\nexport const getProductStats = async (req, res) => {\n  try {\n    const totalProducts = await Product.countDocuments();\n    const inStock = await Product.countDocuments({ inStock: true });\n    const outOfStock = await Product.countDocuments({ inStock: false });\n\n    res.json({\n      success: true,\n      data: {\n        total: totalProducts,\n        inStock,\n        outOfStock,\n      },\n    });\n  } catch (error) {\n    res.status(500).json({ success: false, message: error.message });\n  }\n};\n","// server/routes/products.ts\nimport express from \"express\";\nimport {\n  getAllProducts,\n  getProductById,\n  createProduct,\n  updateProduct,\n  deleteProduct,\n  getProductsByCategory,\n  getProductStats,\n} from \"../controllers/ProductController.js\";\n\nconst router = express.Router();\n\nrouter.get(\"/\", getAllProducts);\nrouter.get(\"/:id\", getProductById);\nrouter.post(\"/\", createProduct);\nrouter.put(\"/:id\", updateProduct);\nrouter.delete(\"/:id\", deleteProduct);\n\nrouter.get(\"/category/:category\", getProductsByCategory);\nrouter.get(\"/stats\", getProductStats);\n\nexport default router;\n","import express from \"express\";\nimport mongoose from \"mongoose\";\nimport cors from \"cors\";\nimport dotenv from \"dotenv\";\nimport productRoutes from \"./routes/products.js\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = path.dirname(__filename);\n\ndotenv.config({ path: path.resolve(__dirname, \"../.env\") });\n\n// ✅ Exported function (ye missing tha)\nexport const createServer = () => {\n  const app = express();\n\n  app.use(cors());\n  app.use(express.json());\n  app.use(\"/api/products\", productRoutes);\n\n  return app;\n};\n\n// ✅ Agar server.ts se run karna ho to yeh optional starter\nconst PORT = process.env.PORT || 4000;\nconst MONGO_URI = process.env.MONGO_URI;\n\nif (process.env.BUILD !== \"true\") {\n  if (!MONGO_URI) {\n    console.error(\"❌ MONGO_URI is not defined in .env file\");\n    process.exit(1);\n  }\n\n  mongoose\n    .connect(MONGO_URI)\n    .then(() => {\n      console.log(\"✅ MongoDB Atlas Connected Successfully\");\n      const app = createServer();\n      app.listen(PORT, () => {\n        console.log(`🚀 Server running at http://localhost:${PORT}`);\n      });\n    })\n    .catch((err) => {\n      console.error(\"❌ MongoDB Connection Error:\", err.message);\n    });\n}\n","import path from \"path\";\nimport { createServer } from \"./index\";\nimport * as express from \"express\";\n\nconst app = createServer();\nconst port = process.env.PORT || 3000;\n\n// In production, serve the built SPA files\nconst __dirname = import.meta.dirname;\nconst distPath = path.join(__dirname, \"../spa\");\n\n// Serve static files\napp.use(express.static(distPath));\n\n// Handle React Router - serve index.html for all non-API routes\napp.get(\"*\", (req, res) => {\n  // Don't serve index.html for API routes\n  if (req.path.startsWith(\"/api/\") || req.path.startsWith(\"/health\")) {\n    return res.status(404).json({ error: \"API endpoint not found\" });\n  }\n\n  res.sendFile(path.join(distPath, \"index.html\"));\n});\n\napp.listen(port, () => {\n  console.log(`🚀 Fusion Starter server running on port ${port}`);\n  console.log(`📱 Frontend: http://localhost:${port}`);\n  console.log(`🔧 API: http://localhost:${port}/api`);\n});\n\n// Graceful shutdown\nprocess.on(\"SIGTERM\", () => {\n  console.log(\"🛑 Received SIGTERM, shutting down gracefully\");\n  process.exit(0);\n});\n\nprocess.on(\"SIGINT\", () => {\n  console.log(\"🛑 Received SIGINT, shutting down gracefully\");\n  process.exit(0);\n});\n"],"names":["express","__dirname","app","productRoutes"],"mappings":"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"}